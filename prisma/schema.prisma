generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Invention {
  asset_id              String       @id
  inventiontitle        String
  commonname            String
  inventordetails       String
  incrementalrenovation String?
  patentnumbers         String?
  journalnumbers        String?
  productidentity       String?
  problemaddressed      String?
  trainrun              String?
  experimentresults     String?
  evidence              String?
  minuteofmeeting       String?
  attachments           String?
  iprecognizer          String?
  hoursspent            String?
  agencyrecognizer      String?
  agencycost            String?
  revieweffort          String?
  managerempid          String?
  entity                String?
  date                  DateTime
  inventioncountry      String?
  creationcountry       String?
  collaboration         String?
  collaboratorname      String?
  collaboratorcountry   String? 
  stakeholders          String?
  created_at            DateTime     @default(now())
  inventors             Json?
  extractions           Extraction[]    @relation("InventionExtraction")
  patentabilities       Patentability[] @relation("InventionPatentabilities")
  PatentSpecificInformation PatentSpecificInformation[] @relation("PatentSpecificInfoToInvention")
  PatentFiling          PatentFiling[] @relation("PatentFiling")
}

model Extraction {
  id               Int        @id @default(autoincrement())
  asset_id         String?
  invention        Invention? @relation("InventionExtraction",fields: [asset_id], references: [asset_id],onDelete: Cascade)
  extractorOne     String
  extractortwo     String
  iEDate           DateTime
  iawpl            String
  nfeature         String
  ifeature         String
  idattachments    String
  scountry         String
  oextractor       String
  ipRecognizer     String
  hoursSpent       String
  agencyRecognizer String
  agencyCost       String
  reviewEffort     String
  managerEmpId     String
  activityStatus   String
  updatenba        String
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model Patentability {
  id                Int      @id @default(autoincrement())

  // Foreign key to Invention
  asset_id          String
  invention         Invention @relation("InventionPatentabilities",fields: [asset_id], references: [asset_id], onDelete: Cascade)

  // Extractor Details
  psone             String
  pstwo             String
  rating            Int?
  nfeature          String
  ifeature          String
  scountry          String
  ooextractor       String

  // Invention Details
  trainRun          String

  // Decision Sheet
  nodc              String
  dibrief           String
  attachment        String

  // Effort Sheet-6
  esfsearcher       String
  ipRecognizer      String
  hoursSpent        Float?
  agencyRecognizer  String
  agencyCost        Float?
  reviewEffort      String
  managerEmpId      String

  // Activity Status
  activityStatus    String

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}


model PatentSpecificInformation {
  id             String   @id @default(cuid())         // Primary key
  asset_id       String                                 // Foreign key
  activityStatus String?
  rating         Int?
  draftType    String?
  data           Json?
  invention      Invention @relation("PatentSpecificInfoToInvention", fields: [asset_id], references: [asset_id], onDelete: Cascade)
}


model PatentFiling {
  id             String   @id @default(cuid())         // Primary key
  asset_id       String                                 // Foreign key
  activityStatus String?
  rating         Int?
  draftType    String?
  data           Json?
  invention      Invention @relation("PatentFiling", fields: [asset_id], references: [asset_id], onDelete: Cascade)
}



